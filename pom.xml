<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>1.5.0.RELEASE</version>
    </parent>

    <groupId>com.js.nj</groupId>
    <artifactId>nj-pom</artifactId>
    <name>nj-pom</name>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>


    <modules>
        <module>nj-back-web/nj-back-pom</module>
        <module>nj-front-web/nj-front-pom</module>
    </modules>

    <!-- 项目组可以在此添加自己项目的依赖，建议使用dependencyManagement对依赖进行统一管理 -->
    <properties>
        <spring-boot.version>1.5.0.RELEASE</spring-boot.version>
        <java.version>1.8</java.version>
        <lombok.version>1.16.18</lombok.version>
        <mybatis-spring-boot-starter.version>1.3.0</mybatis-spring-boot-starter.version>
        <mysql-connector-java.version>8.0.28</mysql-connector-java.version>
        <pagehelper-spring-boot-starter.version>1.1.2</pagehelper-spring-boot-starter.version>
        <druid-spring-boot-starter.version>1.1.0</druid-spring-boot-starter.version>
        <mybatis-generator-maven-plugin.version>1.3.2</mybatis-generator-maven-plugin.version>
        <fastjson.version>1.2.46</fastjson.version>

        <!-- Test Library -->
        <mockito.version>2.18.3</mockito.version>
        <assertj.version>3.9.1</assertj.version>

        <!-- Maven Plugins -->
        <maven-deploy-plugin.version>2.8.2</maven-deploy-plugin.version>
        <maven-war-plugin.version>3.2.0</maven-war-plugin.version>
        <maven-resources-plugin.version>3.0.2</maven-resources-plugin.version>
        <maven-compiler-plugin.version>3.7.0</maven-compiler-plugin.version>
    </properties>
    <dependencyManagement>
        <dependencies>
            <!-- 添加fastjson 依赖包 -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.nj.zy</groupId>
                <artifactId>nj-front-intf</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.nj.zy</groupId>
                <artifactId>nj-front-service</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.nj.zy</groupId>
                <artifactId>nj-back-intf</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.nj.zy</groupId>
                <artifactId>nj-back-service</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${mybatis-spring-boot-starter.version}</version>
            </dependency>
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql-connector-java.version}</version>
            </dependency>
            <!-- 分页插件 -->
            <dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper-spring-boot-starter</artifactId>
                <version>${pagehelper-spring-boot-starter.version}</version>
            </dependency>
            <!-- alibaba的druid数据库连接池 -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>${druid-spring-boot-starter.version}</version>
            </dependency>

        </dependencies>

    </dependencyManagement>
    <!-- 相对于dependencyManagement，所有生命在dependencies里的依赖都会自动引入，并默认被所有的子项目继承 -->
    <dependencies>
        <!-- Test Libraries -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>junit</groupId>
                    <artifactId>junit</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.mockito</groupId>
                    <artifactId>mockito-core</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.11</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>${assertj.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-inline</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- Code GenerFation-->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <id>sit</id>
            <build>
                <filters>
                    <filter>../${project.parent.artifactId}/vars/vars.sit.properties</filter>
                </filters>
            </build>
        </profile>
        <profile>
            <id>pre</id>
            <build>
                <filters>
                    <filter>../${project.parent.artifactId}/vars/vars.pre.properties</filter>
                </filters>
            </build>
        </profile>
        <profile>
            <id>prod</id>
            <build>
                <filters>
                    <filter>../${project.parent.artifactId}/vars/vars.prod.properties</filter>
                </filters>
            </build>
        </profile>
    </profiles>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>${maven-deploy-plugin.version}</version>
                </plugin>

                <!-- war plugin config: 对静态资源进行过滤，替换变量。 如果你不需要，请移除这一段 -->
                <plugin>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>${maven-war-plugin.version}</version>
                    <configuration>
                        <failOnMissingWebXml>false</failOnMissingWebXml>
                        <webResources>
                            <resource>
                                <directory>src/main/webapp</directory>
                                <filtering>true</filtering>
                                <includes>
                                    <include>**/*.html</include>
                                    <include>**/*.js</include>
                                    <include>**/*.css</include>
                                    <include>**/*.xml</include>
                                </includes>
                            </resource>
                        </webResources>
                    </configuration>
                </plugin>

                <plugin>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${maven-resources-plugin.version}</version>
                    <configuration>
                        <overwrite>true</overwrite>
                    </configuration>
                </plugin>

                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                    <configuration>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                    </configuration>
                </plugin>

            </plugins>
        </pluginManagement>
    </build>


</project>